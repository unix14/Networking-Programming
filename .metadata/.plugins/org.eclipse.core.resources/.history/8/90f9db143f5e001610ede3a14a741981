
#include <iostream>
#include "MessengerClient.h"

#define MAX_MSG_INPUT 1024

using namespace std;
using namespace npl;

void help();

int main() {
	cout << "Messenger Client Application" << endl<<endl;
	MessengerClient * client = new MessengerClient();
	help();							//Print commands
	string msg;

	char input[MAX_MSG_INPUT]; 		//input from user
	char* split; 					//for splitting the input
	string command[3];				// [command] [username] [password]

	while (true) {
		msg.clear();
		for(int i=0;i<3;i++)
			command[i].clear();
		gets(input);

		//splitting the input into command & data strings
		split = strtok(input, " ");
		int i = 0;
		while (split != NULL) {
			command[i] = split;
			split = strtok(NULL, " ");
			i++;
		}

		if (command[0] == "c") {
			client->connect(command[1]);
		}else if (command[0] == "login") {
			client->login(command[1], command[2]);
		}else if (command[0] == "register") {
			client->registerUser(command[1], command[2]);
		}else if (command[0] == "lu") {
			client->listUsers();
		}else if (command[0] == "lcu") {
			client->listConnectedUsers();
		}else if (command[0] == "lr") {
			client->listRooms();
		}else if (command[0] == "lru") {
			client->listRoomUsers(command[1]);
		}else if (command[0] == "or") {
			client->enterRoom(command[1]);
		}else if (command[0] == "l") {
			client->printClientStatus();
		}else if (command[0] == "cr") {
			client->closeCurrentRoom();
		}else if (command[0] == "o") {
			client->openSession(command[1]);
		}else if (command[0] == "s"){
			getline(std::cin, msg);
			if (msg.length() > 0 && msg[0] == ' ')
				msg.erase(0, 1);
			client->send(msg);
		}else if (command[0] == "cs") {
			client->closeSessionOrExitRoom();
		}else if (command[0] == "d") {
			client->disconnect();
		}else if (command == "help"){
        	help();
        }else if (command[0] == "x") {
			client->exit();
			break;
		}else {
			cout << "wrong input" << endl;
		}
	}
	cout << "messenger was closed" << endl;
	return 0;
}

void help() {
	cout << "c <ip> - Connect to Server" << endl
	 << "login <user> <password> - Log in to Server" << endl
	 << "register <user> <password> - Register to Server" << endl<<endl
	 << "lu - List all Users from Server" << endl
	 << "lcu - List all Connected Users from Server" << endl
	 << "lr - List Rooms available in Server" << endl
	 << "lru <room name> - List Users in a Room " << endl<<endl
	 << "o <user> - Open Session with user" << endl
	 << "or <room name> - Open a Room"<< endl
	 << "s <message> - Send Message" << endl
	 << "cs - Close Session / Exit room " << endl
	 << "cr - Close Room [Admin only]" << endl<<endl
	 << "l - Print User status" << endl
	 << "d - Disconnect" << endl
	 << "x - Exit" << endl;
}
